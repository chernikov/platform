@model IEnumerable<platformAthletic.Model.User>
@{
    ViewBag.Title = "My Team";
    Layout = "~/Areas/Default/Views/Shared/_Layout.cshtml";
    var currentUser = ((platformAthletic.Controllers.BaseController)ViewContext.Controller).CurrentUser;
    var inTraining = currentUser.IsWeekAvaiable;
}
@section header
{
    <script src="/Media/scripts/default/checkbox.js" type="text/javascript"></script>
    <script src="/Media/scripts/default/styled-select-list.js" type="text/javascript"></script>
    <script src="/Media/scripts/default/team.js" type="text/javascript"></script>
    <script src="/Media/scripts/default/updown.js" type="text/javascript"></script>
}

@Html.Hidden("InTraining", inTraining)

<div class="team-roster-wrp all-transparent-wrp">
    <div class="top">
        <div class="title">
            <h1>@currentUser.OwnTeam.Name.ToUpper()</h1>
        </div>
        <div class="top-menu-wrp clear">

            <div class="print-wrp">
                <div class="icon-print"></div>
                <div class="link-wrp">
                    <a class="primaryColorBg" id="printAll" href="#">Print All Workouts</a><br />
                    <a class="primaryColorBg" id="printSelected" href="#">Print Selected Workouts</a>
                </div>
            </div>
            @using (Html.BeginForm("Index", "Team", FormMethod.Get, new { id = "SearchForm" }))
            {
                <div class="groups-wrp">
                    @if (ViewBag.SelectedListGroups != null)
                    {
                        @Html.DropDownList("groupId", ViewBag.SelectedListGroups as IEnumerable<SelectListItem>)
                    }
                </div>
                <div class="search-gray-wrp">
                    @Html.TextBox("searchString", ViewData["searchString"], new { placeholder = "Search" })
                    <span id="SubmitSearchBtn"></span>
                </div>
            }
            <div class="action-wrp">
                @if (currentUser.OwnTeam.CountPlayers < currentUser.OwnTeam.MaxCount)
                {
                    <div class="add-button">
                        <a class="icon-plus" href="#"></a>
                        <a class="link-button primaryColorBg" id="AddPlayer">Add Player</a>
                    </div>
                }
                else
                {
                    <div class="max-player-button">
                        <a class="icon-plus" href="#"></a>
                        <a class="link-button primaryColorBg" id="MaxPlayerAreReached">Add Player</a>
                    </div>
                }
                <div class="delete-button">
                    <a class="icon-minus" href="#"></a>
                    <a class="link-button primaryColorBg" id="DeletePlayer">Delete Selected Players</a>
                </div>
            </div>
        </div>
    </div>
    <div class="content-wrp">
        <div class="top-list clear">
            <div class="select-name">Select</div>
            <div class="attendance-name">
                Attendance<br />

                @if (inTraining)
                {
                    <span>@DateTime.Now.Current().ToString("d")</span>
                }
                else if (currentUser.CurrentSeason != null && currentUser.CurrentSeason.StartDay > @DateTime.Now.Current())
                {
                    <span>will start @currentUser.CurrentSeason.StartDay.ToString("d")</span>
                }
                else if (currentUser.InTrainingNextSeason)
                {
                    <span>will start @currentUser.NextSeason.StartDay.ToString("d")</span>
                }
                else
                {
                    <span>set season date</span>
                }


            </div>
            <div class="name-name">Name</div>
            <div class="squat-name">Squat</div>
            <div class="bench-name">Bench</div>
            <div class="clean-name">Clean</div>
        </div>
        <div class="content-list">
            @{
                var i = 0;
            }
            @foreach (var user in Model)
            {
                <div class="row playerItem" data-id="@user.ID">
                    <div class="select">
                        <div class="checkbox-wrp">
                            <div class="checkbox-image"></div>
                            <input type="checkbox" class="selectCheckBox" />
                        </div>
                    </div>
                    <div class="attendance">
                        @if (inTraining)
                        {
                            <div class="checkbox-man-wrp">
                                <div class="checkbox-image attendanceSet @(user.HasAttendanceToday ? "checked" : "")">
                                </div>
                            </div>
                        }
                        else
                        {
                            <text>&nbsp;</text>
                        }
                    </div>
                    <div class="name">
                        <a href="/player-page/@user.ID">@user.LastName, @user.FirstName</a>
                    </div>
                    <div class="squat">
                        <div class="updown">
                            <div class="up"></div>
                            <div class="down"></div>
                        </div>
                        @Html.TextBox("Squat", user.Squat.Round5(), new { @class = "SbcTextBox updownkeypress", tabindex = i * 3 + 1 })
                    </div>
                    <div class="bench">
                        <div class="updown">
                            <div class="up"></div>
                            <div class="down"></div>
                        </div>
                        @Html.TextBox("Bench", user.Bench.Round5(), new { @class = "SbcTextBox updownkeypress", tabindex = i * 3 + 2 })
                    </div>
                    <div class="clean">
                        <div class="updown">
                            <div class="up"></div>
                            <div class="down"></div>
                        </div>
                        @Html.TextBox("Clean", user.Clean.Round5(), new { @class = "SbcTextBox updownkeypress", tabindex = i * 3 + 3 })
                    </div>
                </div>
                        i++;
            }
        </div>
    </div>
</div>
