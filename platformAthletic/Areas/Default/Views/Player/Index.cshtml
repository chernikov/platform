@model platformAthletic.Model.User
@{
    ViewBag.Title = "My Page";
    Layout = "~/Areas/Default/Views/Shared/_Layout.cshtml";
    var currentUser = ((platformAthletic.Controllers.BaseController)ViewContext.Controller).CurrentUser;
    
}
@section header
{
    <script type="text/javascript" src="/Media/scripts/default/player.js"></script>
    <script type="text/javascript" src="/Media/scripts/default/updown.js"></script>
}
@Html.Hidden("ID", Model.ID)
<div class="player-page-wrp all-transparent-wrp">
    <div class="top clear">
        <div class="userpic" id="UploadUserpic">
            @if (string.IsNullOrWhiteSpace(Model.AvatarPath))
            {
                <a href="/account">
                    <img src="@Model.FullAvatarPath" alt="userpic"  /></a>
            }
            else
            {
                <img src="@Model.FullAvatarPath" alt="userpic"  />
            }
        </div>
        <div class="user-info">
            <div class="name">@Model.FirstName @Model.LastName</div>
            <div class="info-wrp clear">
                <div class="left">
                    <div class="info-item clear">
                        <div class="name">Height <span class="small">(5'6'')</span></div>
                        <div class="value">
                            @Html.TextBox("Height", Model.Height, new { @class = "no-validate-input" })
                        </div>
                    </div>
                    <div class="info-item clear">
                        <div class="name">Weight <span class="small">(Lbs)</span></div>
                        <div class="value">
                            @Html.TextBox("Weight", Model.Weight, new { @class = "no-validate-input" })
                        </div>
                    </div>
                    <div class="info-item clear">
                        <div class="name">Body Fat <span class="small">(%)</span></div>
                        <div class="value">
                            @Html.TextBox("BodyFat", Model.BodyFat, new { @class = "no-validate-input" })
                        </div>
                    </div>
                </div>
                <div class="right">
                    <div class="item clear">
                        <div class="name">Year</div>
                        <div class="value">
                            @Html.TextBox("Year", Model.Year, new { @class = "int-input" })
                        </div>
                    </div>
                    <div class="item clear">
                        <div class="name">Position</div>
                        @if (Model.CanEditTeamData(currentUser))
                        {
                            @Html.Action("SelectPosition", "Player", new { id = Model.ID })
                        }
                        else
                        {
                            <div class="value">
                                @Model.FieldPosition.Name
                            </div>
                        }
                    </div>
                    @if (Model.InRoles("player"))
                    {
                        <div class="item clear">
                            <div class="name">Team</div>
                            <div class="value">@Model.Team.Name</div>
                        </div>
                    }
                </div>
            </div>

            <div class="print-wrp">
                @if (Model.IsWeekAvaiable)
                {
                    <div class="print">
                        <div class="icon-print">
                        </div>
                        @if (Model.ID == currentUser.ID)
                        {
                            <a class="primaryColorBg" href="/table" target="_blank">Print  Workout</a>
                        }
                        else
                        {
                            <a class="primaryColorBg" href="/team-table?idUsers=@Model.ID" target="_blank">Print
                                Workout</a>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="center clear">
        <div class="board-wrp left-board primaryColorBorder">
            <div class="board-header primaryColorBg">
                <div class="title">Lifts</div>
            </div>
            <div class="board-content">
                <div class="board-item">
                    <div class="name">Squat</div>
                    @if (Model.CanEditTeamData(currentUser))
                    {
                        <div class="value-c">
                            <div class="updown">
                                <div class="up"></div>
                                <div class="down"></div>
                            </div>
                            @Html.TextBox("Squat", Model.Squat.Round5(), new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">@Model.Squat.Round5()</div>
                    }
                </div>
                <div class="board-item">
                    <div class="name">Bench</div>
                    @if (Model.CanEditTeamData(currentUser))
                    {
                        <div class="value-c">
                            <div class="updown">
                                <div class="up"></div>
                                <div class="down"></div>
                            </div>
                            @Html.TextBox("Bench", Model.Bench.Round5(), new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">@Model.Bench.Round5()</div>
                    }
                </div>
                <div class="board-item">
                    <div class="name">Clean</div>
                    @if (Model.CanEditTeamData(currentUser))
                    {
                        <div class="value-c">
                            <div class="updown">
                                <div class="up"></div>
                                <div class="down"></div>
                            </div>
                            @Html.TextBox("Clean", Model.Clean.Round5(), new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">@Model.Clean.Round5()</div>
                    }
                </div>
            </div>
        </div>
        <div class="board-wrp center-board primaryColorBorder">
            @Html.Action("PillarsData", "Player", new { id = Model.ID })
        </div>
        <div class="board-wrp right-board primaryColorBorder">
            <div class="board-header primaryColorBg">
                <div class="title">Speed & Agility</div>
            </div>
            <div class="board-content">
                <div class="board-item">

                    <div class="name">40 Yard dash:</div>
                    @if (Model.CanEditOwnData(currentUser))
                    {
                        <div class="value-c">
                            @Html.TextBox("_40YardDash", Model._40YardDash, new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">
                            @Model._40YardDash
                        </div>
                    }
                </div>
                <div class="board-item">
                    <div class="name">Vertical:</div>
                    @if (Model.CanEditOwnData(currentUser))
                    {
                        <div class="value-c">
                            @Html.TextBox("Vertical", Model.Vertical, new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">
                            @Model.Vertical
                        </div>
                    }
                </div>
                <div class="board-item">
                    <div class="name">3 Cone:</div>
                    @if (Model.CanEditOwnData(currentUser))
                    {
                        <div class="value-c">
                            @Html.TextBox("_3Cone", Model._3Cone, new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">
                            @Model._3Cone
                        </div>
                    }
                </div>
                <div class="board-item">
                    <div class="name">T-Drill:</div>
                    @if (Model.CanEditOwnData(currentUser))
                    {
                        <div class="value-c">
                            @Html.TextBox("TDrill", Model.TDrill, new { @class = "double-input" })
                        </div>
                    }
                    else
                    {
                        <div class="value">
                            @Model.TDrill
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="bottom clear" id="PillarDataWrapper">
        @Html.Action("Pillar", "Player")
    </div>
</div>
