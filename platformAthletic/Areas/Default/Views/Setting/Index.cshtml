@model SettingInfoView
@{
    ViewBag.Title = "Settings and info";
    Layout = "~/Areas/Default/Views/Shared/_BootstrapLayout.cshtml";
    var currentUser = ((platformAthletic.Controllers.BaseController)ViewContext.Controller).CurrentUser;
}

@section styles {
    <link href="~/Content/fineuploader.css" rel="stylesheet" />
}
@section header {
    <script src="~/Scripts/jquery-ui-1.9.2.custom.js"></script>
    <script src="~/Scripts/jquery.ImageColorPicker.js"></script>
    <script src="~/Scripts/jquery.fineuploader-3.0.js"></script>
    <script src="~/Scripts/default/setting-info.js"></script>
}
<div class="container-fluid">
    <div class="side-body">
        <div class="breadcrumb">
            <div class="row">
                <div class="col-lg-12 overflow">
                    <ol>
                        <li><a href="/"><span class="glyphicon glyphicon-home"></span>&nbsp;&nbsp;&nbsp; Home</a></li>
                        <li class="active"><a href="/settings">Settings</a></li>
                    </ol>
                </div>
            </div>
        </div>
        <div class="row settings-wrapper">
            <div class="col-lg-2 col-md-2 settings-menu height no-padding-right no-padding-left  hidden-xs hidden-sm">
                @Html.Partial("SettingMenu")
            </div>
            <div class="col-lg-10 col-md-10 form-settings-wrapper">
                <h2>Account</h2>
                <hr />
                @if (ViewBag.Message != null)
                {
                     <div class="row">
                        <div class="col-lg-6">
                            <div class="alert alert-success">
                                @ViewBag.Message
                            </div>
                        </div>
                    </div>
                }

                @using (Html.BeginForm("Index", "Setting", FormMethod.Post))
                {
                    @Html.Hidden("ID", Model.ID)
                    @Html.Hidden("PrimaryColor", Model.PrimaryColor)
                    @Html.Hidden("SecondaryColor", Model.SecondaryColor)
                    @Html.Hidden("LogoPath", Model.LogoPath)
                    @Html.Hidden("AvatarPath", Model.AvatarPath)
                    <div class="row">
                        <div class="col-lg-6">
                            @if (currentUser.InRoles("coach"))
                            {
                                <div class="form-group">
                                    <label for="Email"><span class="required">*</span>Email</label>

                                    @Html.TextBox("Email", Model.Email, new { @class = "form-control" })

                                    @Html.ValidationMessage("Email")
                                </div>
                            }
                            else
                            {
                                @Html.Hidden("Email", Model.Email)
                            }
                            <div class="form-group">
                                <label for="FirstName"><span class="required">*</span>First name</label>
                                @Html.TextBox("FirstName", Model.FirstName, new { @class = "form-control" })
                                @Html.ValidationMessage("FirstName")
                            </div>
                            <div class="form-group">
                                <label for="LastName"><span class="required">*</span>Last name</label>
                                @Html.TextBox("LastName", Model.LastName, new { @class = "form-control" })
                                @Html.ValidationMessage("LastName")
                            </div>
                            @if (currentUser != null && currentUser.InRoles("coach,individual,assistant"))
                            {
                                <div class="form-group">
                                    <label for="LastName"><span class="required">*</span>Phone number</label>
                                    @Html.TextBox("PhoneNumber", Model.PhoneNumber, new { @class = "form-control" })
                                    @Html.ValidationMessage("PhoneNumber")
                                </div>
                            }
                            else
                            {
                                @Html.Hidden("PhoneNumber", "0000")
                            }
                            @if (currentUser != null && currentUser.InRoles("individual"))
                            {
                                <div class="form-group">
                                    <label for="LastName"><span class="required">*</span>State</label>
                                    @Html.DropDownList("IndividualStateID", Model.SelectListStateID, new { @class = "form-control" })
                                </div>
                            }

                            <div class="setting-control">
                                <h3 class="text-center">Current Avatar</h3>
                                <hr />

                                <div class="pull-right">
                                    <div class="btn btn-success btn-lg btn-margin" id="UploadAvatarBtn">Upload Avatar</div>
                                </div>
                                <div class="pull-left">
                                    <div class="thumbnail">
                                        <img id="AvatarPathImage" src="@Model.FullAvatarPath?w=200&h=200&mode=crop" />
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="hint">
                                    Recommended file Type<br />
                                    For best result please use .png, .gif, .jpg with the size of 400 X 400.
                                </div>
                            </div>

                            @if (currentUser != null && currentUser.InRoles("coach"))
                            {
                                <h3>Settings</h3>
                                <hr />
                                <div class="setting-control">
                                    <div class="form-group">
                                        <label class="fixed-width">Control of Maxes:</label>
                                        <label class="select">@Html.RadioButton("SBCControl", (int)Team.SBCControlType.Coach, Model.SBCControl == (int)Team.SBCControlType.Coach) Coach </label>
                                        <label class="select">@Html.RadioButton("SBCControl", (int)Team.SBCControlType.CoachAndPlayer, Model.SBCControl == (int)Team.SBCControlType.CoachAndPlayer) Coach And Player</label>
                                    </div>
                                    <div class="form-group">
                                        <label class="fixed-width">Control of Attendance:</label>
                                        <label class="select">@Html.RadioButton("SBCAttendance", (int)Team.SBCAttendanceType.Coach, Model.SBCAttendance == (int)Team.SBCAttendanceType.Coach) Coach</label>
                                        <label class="select">@Html.RadioButton("SBCAttendance", (int)Team.SBCAttendanceType.CoachAndPlayer, Model.SBCAttendance == (int)Team.SBCAttendanceType.CoachAndPlayer) Coach And Player</label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div id="UpdatePasswordWrapper">
                        @Html.Partial("UpdatePassword", new platformAthletic.Models.ViewModels.User.ChangePasswordView() { ID = Model.ID })
                    </div>
                    if (currentUser != null && currentUser.InRoles("individual,player"))
                    {
                        <div class="row">
                            <div class="col-lg-6">
                                <h3>Privacy</h3>
                                <hr />
                                <div class="form-group">
                                    <label>@Html.RadioButton("PublicLevel", (int)platformAthletic.Model.User.PublicLevelEnum.Private, Model.PublicLevel == (int)platformAthletic.Model.User.PublicLevelEnum.Private) <strong>Private: </strong> No one can see your profile except you and your coach.</label>
                                    <label>@Html.RadioButton("PublicLevel", (int)platformAthletic.Model.User.PublicLevelEnum.Limited, Model.PublicLevel == (int)platformAthletic.Model.User.PublicLevelEnum.Limited) <strong>Limited: </strong> Only members of Platform Athletics can see your profile.</label>
                                    <label>@Html.RadioButton("PublicLevel", (int)platformAthletic.Model.User.PublicLevelEnum.Public, Model.PublicLevel == (int)platformAthletic.Model.User.PublicLevelEnum.Public) <strong>Public: </strong> Profile can be viewed by anyone (makes sharing on social media easy)</label>
                                </div>
                            </div>
                        </div>
                    }
                    if (currentUser != null && currentUser.InRoles("coach"))
                    {
                        <h3 class="text-center">Team Colors</h3>
                        <hr />

                        <div class="row team-color-wrapper">
                            <div class="color-wrapper">
                                <div class="color-picker">
                                    <div class="title">
                                        Primary color
                                    </div>
                                    <div class="color-image">
                                        <img src="/Media/images/color_picker_img.png" id="primary_color" alt="color picker"
                                             data-color="@Model.PrimaryColor" />
                                    </div>
                                </div>
                                <div class="color-picker">
                                    <div class="title">
                                        Secondary color
                                    </div>
                                    <div class="color-image">
                                        <img src="/Media/images/color_picker_img.png" id="secondary_color" alt="color picker"
                                             data-color="@Model.SecondaryColor" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="setting-control">
                            <h3 class="text-center">Current Logo</h3>
                            <hr />

                            <div class="pull-right">
                                <div class="btn btn-success btn-lg btn-margin" id="UploadLogoBtn">Upload Logo</div>
                            </div>
                            <div class="pull-left">
                                <div class="thumbnail">
                                    <img id="LogoPathImage" src="@Model.FullLogoPath?w=250&h=166&mode=crop" />
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="hint">
                                Recommended file Type<br />
                                For best result please use .png, .gif, .jpg with the size of 286 X 303.
                            </div>
                        </div>
                    }


                    <div class="form-group text-center margin-top">
                        <button class="btn btn-primary btn-lg forbitBtn" data-message="Settings cannot be adjusted in test mode" id="Save">SAVE</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
